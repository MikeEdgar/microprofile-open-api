//
// Copyright (c) 2016-2022 Contributors to the Eclipse Foundation
//
// See the NOTICE file(s) distributed with this work for additional
// information regarding copyright ownership.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// You may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

[[release_notes]]
== Release Notes

[[release_notes_41]]
=== Release Notes for MicroProfile OpenAPI 4.1

A full list of changes delivered in the 4.1 release can be found at link:https://github.com/microprofile/microprofile-open-api/milestone/8?closed=1[MicroProfile OpenAPI 4.1 Milestone]

[[api_changes_41]]
==== API/SPI changes

* Model API changes
** New `OpenAPI` property `jsonSchemaDialect` (https://github.com/microprofile/microprofile-open-api/issues/660[660])
** New methods added to `Extensible`: `getExtension(String)` and `hasExtension(String)` (https://github.com/microprofile/microprofile-open-api/issues/666[666])
* Add `@Target` to `@DependentRequired`, `@DependentSchema` and `@SchemaProperty` where it was missing (https://github.com/microprofile/microprofile-open-api/issues/676)[676])

[[release_notes_40]]
=== Release Notes for MicroProfile OpenAPI 4.0

A full list of changes delivered in the 4.0 release can be found at link:https://github.com/eclipse/microprofile-open-api/milestone/6?closed=1[MicroProfile OpenAPI 4.0 Milestone]

[[incompatible_changes_40]]
==== Incompatible Changes

* `/openapi` endpoint now serves documentation in OpenAPI v3.1 format (https://github.com/eclipse/microprofile-open-api/issues/333[333])
* Incompatible changes to the `Schema` model API, reflecting changes in the OpenAPI v3.1 document format (https://github.com/eclipse/microprofile-open-api/issues/584[584])
** `type` property type changed from `SchemaType` to `List<SchemaType>`
** `exclusiveMinimum` and `exclusiveMaximum` property types changed from `Boolean` to `BigDecimal`
** `nullable` property removed (replaced by the addition of `NULL` to `SchemaType`)
* Default value of `@RequestBody.required` changed to `true` to reflect that this is the much more common case where a RESTful resource method accepts a request body (https://github.com/eclipse/microprofile-open-api/issues/349[349])
* Minimum Java version increased to 11

[[api_changes_40]]
==== API/SPI changes

* Model API changes, reflecting changes in the OpenAPI v3.1 document format
** New `OpenAPI` property: `webhooks` (https://github.com/eclipse/microprofile-open-api/issues/583[583])
** New `Components` property: `pathItems` (https://github.com/eclipse/microprofile-open-api/issues/437[437])
** New `Info` property: `summary` (https://github.com/eclipse/microprofile-open-api/issues/435[435])
** New `License` property: `identifier` (https://github.com/eclipse/microprofile-open-api/issues/436[436])
** New `Schema` properties: `booleanSchema`, `comment`, `constValue`, `contains`, `contentEncoding`, `contentMediaType`, `contentSchema`, `dependentRequired`, `dependentSchemas`, `elseSchema`, `examples`, `ifSchema`, `maxContains`, `minContains`, `patternProperties`, `prefixItems`, `propertyNames`, `schemaDialect`, `thenSchema`, `unevaluatedItems`, `unevaluatedProperties` (https://github.com/eclipse/microprofile-open-api/issues/584[584]), (https://github.com/eclipse/microprofile-open-api/issues/567[567])
** New `Schema` methods for working with custom properties: `set(String, Object)`, `get(String)`, `setAll(Map<String, ?>)`, `getAll()` (https://github.com/eclipse/microprofile-open-api/issues/584[584])
** New `Schema.SchemaType` enum value: `NULL` (https://github.com/eclipse/microprofile-open-api/issues/584[584])
** New `SecuritySchema.Type` enum value: `MUTUALTLS` (https://github.com/eclipse/microprofile-open-api/issues/582[582])
* Annotation API changes, reflecting changes in the OpenAPI v3.1 document format
** New `@OpenAPIDefinition` property: `webhooks` (https://github.com/eclipse/microprofile-open-api/issues/583[583])
** New `@Components` property: `pathItems` (https://github.com/eclipse/microprofile-open-api/issues/437[437])
** New annotation `@PathItem` (https://github.com/eclipse/microprofile-open-api/issues/437[437])
** New annotation `@PathItemOperation` (https://github.com/eclipse/microprofile-open-api/issues/437[437])
** New `@Callback` property: `pathItemRef` (https://github.com/eclipse/microprofile-open-api/issues/437[437])
** New `@Info` property: `summary` (https://github.com/eclipse/microprofile-open-api/issues/435[435])
** New `@License` property: `identifier` (https://github.com/eclipse/microprofile-open-api/issues/436[436])
** New `@Schema` properties: `comment`, `constValue`, `contains`, `contentEncoding`, `contentMediaType`, `contentSchema`, `dependentRequired`, `dependentSchemas`, `elseSchema`, `examples`, `ifSchema`, `maxContains`, `minContains`, `patternProperties`, `prefixItems`, `propertyNames`, `thenSchema` (https://github.com/eclipse/microprofile-open-api/issues/584[584]), (https://github.com/eclipse/microprofile-open-api/issues/567[567])
** New `@SchemaProperty` properties: `additionalProperties`, `comment`, `constValue`, `contains`, `contentEncoding`, `contentMediaType`, `contentSchema`, `dependentRequired`, `dependentSchemas`,`elseSchema`, `examples`, `ifSchema`, `maxContains`, `minContains`, `patternProperties`, `prefixItems`, `propertyNames`, `thenSchema` (https://github.com/eclipse/microprofile-open-api/issues/584[584])
** New annotations supporting the new `@Schema` properties: `@DependentRequired`, `@DependentSchema`, `@PatternProperty` (https://github.com/eclipse/microprofile-open-api/issues/584[584]), (https://github.com/eclipse/microprofile-open-api/issues/567[567])
** New `SecuritySchemeType` enum value: `MUTUALTLS` (https://github.com/eclipse/microprofile-open-api/issues/582[582])
* Added `module-info` to the API jar (https://github.com/eclipse/microprofile-open-api/pull/577[577])

[[other_changes_40]]
==== Other changes

* Update references to the OpenAPI spec to point to v3.1 (https://github.com/eclipse/microprofile-open-api/pull/606[606])
* Update documentation and TCKs to reflect changes in OpenAPI v3.1 which don't affect the model API
** All security schemes may define required roles (https://github.com/eclipse/microprofile-open-api/issues/590[590])
** Summary and description are now valid when `$ref` is set (https://github.com/eclipse/microprofile-open-api/issues/589[589])
** Operation.requestBody permitted for HTTP methods which don't allow a request body (https://github.com/eclipse/microprofile-open-api/issues/591[591])
** Only one of Paths, Components, or Webhooks is required (https://github.com/eclipse/microprofile-open-api/issues/592[592])
** New encoding options for `multipart/form-data` (https://github.com/eclipse/microprofile-open-api/issues/587[587])
** New parameter style values valid for object type (https://github.com/eclipse/microprofile-open-api/issues/586[586])
** Operation no longer requires responses (https://github.com/eclipse/microprofile-open-api/issues/585[585])
* Replace references to "JAX-RS" with "Jakarta RESTful Web Services" (https://github.com/eclipse/microprofile-open-api/issues/574[574])

[[release_notes_31]]
=== Release Notes for MicroProfile OpenAPI 3.1

A full list of changes delivered in the 3.1 release can be found at link:https://github.com/eclipse/microprofile-open-api/milestone/5?closed=1[MicroProfile OpenAPI 3.1 Milestone].

[[api_changes_31]]
==== API/SPI Changes

* Add `extensions` attribute to most annotations (https://github.com/eclipse/microprofile-open-api/issues/387[387])
* Improvements to the definition of security requirements (https://github.com/eclipse/microprofile-open-api/issues/483[483], https://github.com/eclipse/microprofile-open-api/issues/468[468])
** Define behavior of `@SecurityRequirementsSet` and make it repeatable
** Clarify that a individual `@SecurityRequirement` annotation applied to a class or method is equivalent to a `@SecurityRequirementsSet` annotation containing that `@SecurityRequirement` annotation
** Add `securitySets` attribute to `@OpenAPIDefinition` and `@CallbackOperation`
* Add `additionalProperties` attribute to `@Schema` (https://github.com/eclipse/microprofile-open-api/issues/423[423])
* Allow `@APIResponse` to be applied to a class, indicating that every resource method on that class has that response (https://github.com/eclipse/microprofile-open-api/issues/417[417])

[[other_changes_31]]
==== Other Changes

* Add processing of some Jakarta Bean Validation annotations (https://github.com/eclipse/microprofile-open-api/issues/482[482])
* Define the precedence of the `mp.openapi.scan.*` config properties (https://github.com/eclipse/microprofile-open-api/issues/422[422])
* Clarify that the `name` attribute of `@Extension` must include the `x-` prefix (https://github.com/eclipse/microprofile-open-api/issues/339[339])
* Only require that the `/openapi` endpoint is made available if there is documentation to show (https://github.com/eclipse/microprofile-open-api/issues/413[413])
* Recommend a standard endpoint for implementations which provide a user interface (https://github.com/eclipse/microprofile-open-api/issues/334[334])
* Recommend that implementations provide a way to serve CORS headers on the `/openapi` endpoint (https://github.com/eclipse/microprofile-open-api/issues/416[416])

[[release_notes_30]]
=== Release Notes for MicroProfile OpenAPI 3.0

A full list of changes delivered in the 3.0 release can be found at link:https://github.com/eclipse/microprofile-open-api/milestone/4?closed=1[MicroProfile OpenAPI 3.0 Milestone].

[[incompatible_changes_30]]
==== Incompatible Changes

This release aligns with Jakarta EE 9.1 (link:https://github.com/eclipse/microprofile-open-api/issues/487[487]), so it won’t work with earlier versions of Jakarta or Java EE.

[[api_changes_30]]
===== API/SPI Changes

There are no functional changes introduced in this release, except the dependency updating from javax to jakarta.

[[other_changes_30]]
===== Other Changes

* Negative Test Scenario - @SchemaProperty Precedence Behaviour (link:https://github.com/eclipse/microprofile-open-api/issues/466[466])
* Use MediaType.APPLICATION_JSON instead of application/json in some TCKs (link:https://github.com/eclipse/microprofile-open-api/pull/471[471])
* TCK Tag Collection Test contains() side effect (link:https://github.com/eclipse/microprofile-open-api/issues/453[453])
* TestNG 7.4.0 Assert.assertNotSame has a bug which causes ModelConstructionTest TCK to fail (link:https://github.com/eclipse/microprofile-open-api/issues/494[494])

[[release_notes_20]]
=== Release Notes for MicroProfile OpenAPI 2.0

A full list of changes delivered in the 2.0 release can be found at link:https://github.com/eclipse/microprofile-open-api/milestone/2?closed=1[MicroProfile OpenAPI 2.0 Milestone].

[[incompatible_changes_20]]
==== Incompatible Changes

* Model interfaces that were deprecated in 1.1 have been removed:
  ** `Scopes` - this interface was replaced with `Map<String, ServerVariable>` because it did not need to be extensible (link:https://github.com/eclipse/microprofile-open-api/issues/328[328])
  ** `ServerVariables` - this interface was replaced with `Map<String, ServerVariable>` because it did not need to be extensible (link:https://github.com/eclipse/microprofile-open-api/issues/245[245])

* Model interfaces that are not extensible no longer extend `java.util.Map`:
  ** `APIResponses` (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Callback` (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Content` (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Path` (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `SecurityRequirement` (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])

* Methods on model interfaces that were deprecated) in 1.1 have been removed:
  ** `APIResponses`
    *** `addApiResponse(String name, APIResponse apiResponse)` - use `addAPIResponse(String, APIResponse)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/229[229])
    *** `get(Object key)` - use `getAPIResponse(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `containsKey(Object key)` - use `hasAPIResponse(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `put(String key, PathItem value)` - use `addAPIResponse(String, APIResponse)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `putAll(Map<? extends String, ? extends PathItem> m)` - use `setAPIResponses(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `remove(Object key)` - use `removeAPIResponse(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Callback`
    *** `get(Object key)` - use `getPathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `containsKey(Object key)` - use `hasPathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `put(String key, PathItem value)` - use `addPathItem(String, PathItem)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `putAll(Map<? extends String, ? extends PathItem> m)` - use `setPathItems(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `remove(Object key)` - use `removePathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Content`
    *** `get(Object key)` - use `getMediaType(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `containsKey(Object key)` - use `hasMediaType(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `put(String key, PathItem value)` - use `addMediaType(String, MediaType)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `putAll(Map<? extends String, ? extends PathItem> m)` - use `setMediaTypes(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `remove(Object key)` - use `removeMediaType(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `OASFactory`
    *** `createScopes` - use `Map<String, String>` for scopes instead (link:https://github.com/eclipse/microprofile-open-api/issues/328[328])
    *** `createServerVariables` - use use `Map<String, ServerVariable>` for server variables instead (link:https://github.com/eclipse/microprofile-open-api/issues/245[245])
  ** `OAuthFlow`
    *** `setScopes(Scopes scopes)` - use `setScopes(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/328[328])
    *** `scopes(Scopes scopes)` - use `scopes(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/328[328])
  ** `OpenAPI`
    *** `path(String name, PathItem path)` - use `Paths#addPathItem(String, PathItem)` on `OpenAPI#getPaths` instead (link:https://github.com/eclipse/microprofile-open-api/issues/247[247])
  ** `Path`
    *** `get(Object key)` - use `getPathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `containsKey(Object key)` - use `hasPathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `put(String key, PathItem value)` - use `addPathItem(String, PathItem)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `putAll(Map<? extends String, ? extends PathItem> m)` - use `setPathItems(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `remove(Object key)` - use `removePathItem(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `PathItem`
    *** `readOperations` - use `Map#values()` on `PathItem#getOperations()` instead (link:https://github.com/eclipse/microprofile-open-api/pull/256[256])
    *** `readOperationsMap` - use `getOperations()` instead (link:https://github.com/eclipse/microprofile-open-api/pull/256[256])
  ** `Schema`
    *** `getAdditionalProperties` - use `getAdditionalPropertiesSchema()` or `getAdditionalPropertiesBoolean()` instead (link:https://github.com/eclipse/microprofile-open-api/issues/257[257], link:https://github.com/eclipse/microprofile-open-api/pull/281[281])
    *** `setAdditionalProperties(Schema additionalProperties)` - use `setAdditionalPropertiesSchema(Schema)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/257[257], link:https://github.com/eclipse/microprofile-open-api/pull/281[281])
    *** `setAdditionalProperties(Boolean additionalProperties)` - use `setAdditionalPropertiesBoolean(Boolean)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/257[257], link:https://github.com/eclipse/microprofile-open-api/pull/281[281])
    *** `additionalProperties(Schema additionalProperties)` - use `additionalPropertiesSchema(Schema)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/257[257], link:https://github.com/eclipse/microprofile-open-api/pull/281[281])
    *** `additionalProperties(Boolean additionalProperties)` - use `additionalPropertiesBoolean(Boolean)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/257[257], link:https://github.com/eclipse/microprofile-open-api/pull/281[281])
  ** `SecurityRequirement`
    *** `get(Object key)` - use `getScheme(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `containsKey(Object key)` - use `hasScheme(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `put(String key, PathItem value)` - use `addScheme(String, List)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `putAll(Map<? extends String, ? extends PathItem> m)` - use `setSchemes(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
    *** `remove(Object key)` - use `removeScheme(String)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/248[248])
  ** `Server`
    *** `setVariables(ServerVariables variables)` - use `setVariables(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/245[245])
    *** `variables(ServerVariables variables)` - use `variables(Map)` instead (link:https://github.com/eclipse/microprofile-open-api/issues/245[245])

[[api_changes_20]]
==== API/SPI Changes

* The `@SchemaProperty` annotation has been added to allow the properties for a schema to be defined inline. (link:https://github.com/eclipse/microprofile-open-api/issues/360[360]). For example:
```
    @Schema(properties={
        @SchemaProperty(name="creditCard", required=true),
        @SchemaProperty(name="departureFlight", description="The departure flight information."),
        @SchemaProperty(name="returningFlight")
    })
```

* The `@RequestBodySchema` annotation has been added to provide a shorthand mechanism to specify the schema for a request body (link:https://github.com/eclipse/microprofile-open-api/issues/363[363]). For example:
```
    @RequestBodySchema(MyRequestObject.class)
```

* The `@APIResponseSchema` annotation has been added to provide a shorthand mechanism to specify the schema for a response body (link:https://github.com/eclipse/microprofile-open-api/issues/363[363]). For example:
```
    @APIResponseSchema(MyResponseObject.class)
```

* The `mp.openapi.schema.*` MicroProfile Config property has been added to allow the schema for a specific class to be specified. This property would typically be used in cases where the application developer does not have access to the source code of a class (link:https://github.com/eclipse/microprofile-open-api/issues/364[364]). For example:
```
    mp.openapi.schema.java.time.Instant = { \
        "name": "EpochSeconds", \
        "type": "number", \
        "format": "int64", \
        "title": "Epoch Seconds", \
        "description": "Number of seconds from the epoch of 1970-01-01T00:00:00Z" \
    }
```

[[functional_changes_20]]
==== Functional Changes

* Getter methods on model interfaces that return a list or map now return a copy of the list/map containing the same items. This list/map CAN be immutable. (link:https://github.com/eclipse/microprofile-open-api/issues/240[240])

* Setter methods on model interfaces that take a list or a map as a parameter MUST not use the list/map instance directly (link:https://github.com/eclipse/microprofile-open-api/issues/284[284])

[[other_changes_20]]
==== Other Changes

* JavaDoc updates to clarify the behaviour of getter methods on model interfaces that return a list or map ((link:https://github.com/eclipse/microprofile-open-api/issues/240[240]), link:https://github.com/eclipse/microprofile-open-api/pull/288[288])

* TCK updates to verify that getter methods on model interfaces return a list or map, return a copy of underlying collection ((link:https://github.com/eclipse/microprofile-open-api/issues/240[240]), link:https://github.com/eclipse/microprofile-open-api/pull/288[288])

[[release_notes_11]]
=== Release Notes for MicroProfile OpenAPI 1.1

Changes include:

* the addition of the JAXRS 2.1 `PATCH` method

* automatic hide MicroProfile Rest Client interfaces

* `OASFactoryResolver` is now a proper `SPI` artifact

* builder methods now have default implementations

* `@Content` now supports a singular `example` field

* `@Extension` now has a `parseValue` field for complex values

* TCK updated to support newer `3.0.x` versions

* overall Javadoc enhancements (classes and packages)

* various other minor improvements to the annotations, models and TCK

** bug fixes, documentation updates, more convenience methods, deprecations, etc.

[[release_notes_10]]
=== Release Notes for MicroProfile OpenAPI 1.0

First official release of MP OpenAPI.  Highlights of the release:

* set of annotations that covers the entire OpenAPI v3 specification when combined
with JAX-RS annotations.

* set of OpenAPI v3 models covering the entire OpenAPI v3 specification, with
corresponding APIs to provide a bootstrap or complete model tree.

* configuration injected via MicroProfile Config specification.

* ability to provide static (partial or complete) OpenAPI v3 files.

* definition of an HTTP endpoint, `/openapi`, that provides YAML and JSON representations
of the generated OpenAPI v3 document.
